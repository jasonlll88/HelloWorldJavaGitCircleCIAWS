version: 2
jobs:
  build:
    working_directory: ~/HelloWorldGitCircleCIAWS

    machine:
      environment:
        SPRING_PROFILES_ACTIVE: test
      timezone:
        America/Bogota
      # Here’s an example of how to set the version of Java to be used for your tests.
      java:
        version: openjdk8
      # You can enable other databases and services from the services section
      services:
        - docker

    general:
      artifacts:
        - "target/app.jar"

    steps:
      #In this case, the checkout step will checkout project source code into the job’s working_directory.
      - checkout
      - restore_cache:
          key: HelloWorldJavaGitCircleCIAWS-{{ checksum "pom.xml" }}
      - run: git config --global user.email jasonlll88@hotmail.com
      - run: git config --global user.name jasonlll88
      - run: mvn clean install

      - save_cache:
          # https://circleci.com/docs/2.0/caching/#caching-libraries MAVEN
          paths:
            - ~/.m2
          # https://circleci.com/docs/2.0/caching/#using-keys-and-templates
          # we can use the pom.xml  ????
          key: HelloWorldJavaGitCircleCIAWS-{{ checksum "pom.xml" }}

      - deploy:
         # name of the deploy
         name: Deploy HelloWorldJavaGitCircleCIAWS

         command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
              if [[ `git log -1` =~ "[maven-release-plugin]" ]]; then
                   echo "Ignoring release plugin generated version"
               else
                echo "Preparing release..."
                mvn -B release:prepare -Dmaven.test.skip=true
        # chmod 755 deploy.sh && ./deploy.sh HelloWorldJavaGitCircleCIAWS adapters prod "$(mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version|grep -Ev '(^\[|Download\w+:)')"
        # example of script
                JQ="jq -r -e"





        ######
              fi
            else
              echo "Not deploy in master"
            fi

      ###### sonar

      # - run:
      #     name: SONAR
      #     # if the branch is master then run
      #     command:|
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #                     mvn sonar:sonar -s settings_sonar.xml
      #       fi


#     docker:
#       - image: circleci/openjdk:8-jdk-browsers
#     steps:
#       - checkout
#       # - run: echo "hello world"
#       - run: pwd
#       - run: ls
#       - run: cat README.md
#       - run: ls ../
#       - restore_cache:
#           key: HelloWorldJavaGitCircleCIAWS-{{ checksum "pom.xml" }}
#       - run: mvn dependency:go-offline
#       - run: mvn clean install
#       - save_cache:
#           paths:
#             - ~/.m2
#           key: HelloWorldJavaGitCircleCIAWS-{{ checksum "pom.xml" }}
#       - run: mvn test
#       - run: mvn package
# #      - run: mvn exec:java -Dexec.mainClass="main.java.HelloWorldGitCircleCIAWS"
# #      - run: mvn exec:java
#       - deploy:
#           name: Deploy HelloWorldJava
#           command: |
#             if [ "${CIRCLE_BRANCH}" == "master" ]; then
#               if [[ `git log -1` =~ "[maven-release-plugin]" ]]; then
#                    echo "Ignoring release plugin generated version"
#               else
#                 echo "Preparing release..."
#                 mvn -B release:prepare -Dmaven.test.skip=true -s settings.xml
#
#
#       - store_test_results:
#           path: target/surefire-reports
#       - store_artifacts:
#           path: target/demo-java-0.0.1-SNAPSHOT.jar
